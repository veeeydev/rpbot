module.exports = async d => {
    const code = d.command.code
    
    const r = code.split("$queue").length - 1
    
    const after = code.split("$queue")[r]
    
    if (after[0] !== "[") {
        const server = d.client.servers.get(d.message.guild.id) 
        
        if (!server) return d.error(`❌ Nothing playing`) 
        
        return {
            code: code.replaceLast(`$queue`, server.songs.slice(0, 10).map((song, index) => {
                return `${index +1}) ${song.title().removeBrackets()
                } by <@${song.userID()}>`
            }).join("\n"))
        }
    }
    const inside = code.split("$queue[")[r].split("]")[0]
    const [
        page = 1, 
        amount = 10,
        custom = `{number}) {title} by <@{userID}>`
    ] = inside.split(";")

    const server = d.client.servers.get(d.message.guild.id)

    if (!server) return d.error(`:x: Nothing playing`)

    const songs = []
    let y = amount * page - 10
//ignore below
    for (const song of server.songs.slice(amount * page - amount, amount * page)) {
        songs.push(custom.replace(`{number}`, y + 1).replace(`{userID}`, song.userID()).replace(`{title}`, song.title().removeBrackets()).replace(`{url}`, song.url()).replace(`{description}`, song.description()).replace(`{duration}`, song.duration()).replace(`{publisher}`, song.publisher()).replace(`{publisher_url}`, song.publisher_url()))

        y++
    }

    return {
        code: code.replaceLast(`$queue[${inside}]`, songs.join("\n").deleteBrackets())
    }
}