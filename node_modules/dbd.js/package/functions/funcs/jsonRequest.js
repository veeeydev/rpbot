const errorHandler = require("../../handlers/errors.js")
const fetch = require("node-fetch")

module.exports = async d => {

    const code = d.command.code 

    const r = code.split("$jsonRequest").length - 1

    const inside = code.split("$jsonRequest[")[r].split("]")[0]

		const headers = {}
    const [url, get, error, ...header] = inside.split(";")

    if (!get) return d.message.channel.send(`:x: Invalid parameters in \`$jsonRequest[${inside}]\``)

		for (const head of header) {
			const [ headName, ...headValue ] = head.split(':')

			headers[headName] = headValue.join(':')
		}

    const request = await fetch(url.replace("#CHAR#", "/$"), { headers }).catch(err => {})

    if (!request) {
        if (error) errorHandler(d, error)
    
        return
    } 

    var response 
  
    if (typeof request.json === "function") {
      response = await request.json().catch(err => {})
    } else {
      response = request
    }

    if (!response) {
        if (error) errorHandler(d, error)
    
        return
    } 
  
  	try {      
      const g = get.addBrackets()
      
      var req = eval(`response` + (["[", "."].some(e => g.startsWith(e)) ? g : `.${g}`)) || "" 
  	} catch(err) { 
      return errorHandler(d, error) 
 		} 

    return {
        code: code.replaceLast(`$jsonRequest[${inside}]`,  typeof req === "string" ? req.removeBrackets() : req || "")
    }
}