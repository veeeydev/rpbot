module.exports = () => {
  const maxRequests = 20
  
  var requests = 0
const express = require("express");
const app = express();

// make all the files in 'public' available
// https://expressjs.com/en/starter/static-files.html
app.use(express.static("public"));
  const permissions = require("../utils/permissions")
  const commands = require("../utils/commands")
  const callbacks = require("../utils/callbacks")
  const embedFuncs  = require("../utils/embedErrors.js")
  const parser = require("../functions/parser.js")
  const songproperties = require("../utils/songOptions.js")
  
// https://expressjs.com/en/starter/basic-routing.html
  app.get("/permissions", (req, res) => {
    return res.json(Object.keys(permissions))
  })
    app.get("/callbacks", (req, res) => {
    return res.json(callbacks)
  })
  
    app.get("/commands", (req, res) => {
    return res.json(commands)
  })
  
  app.get("/presenceoptions", (req, res) => {
      const obj = {};Object.entries(require("../utils/presenceOptions")).map(x => obj[x[0]] = x[1].split(";")[0])
      return res.json(obj)
  })

  app.get("/songproperties",(req, res) => {
    return res.json(songproperties)
  })
  
  app.get("/useroptions", (req, res) => {
      const obj = {};Object.entries(require("../utils/userOptions")).map(x => obj[x[0]] = x[1].split(";")[0])
      return res.json(obj)
  })
  
  app.get("/memberoptions", (req, res) => {
      const obj = {};Object.entries(require("../utils/memberOptions")).map(x => obj[x[0]] = x[1].split(";")[0])
      return res.json(obj)
  })
  
  app.get("/roleoptions", (req, res) => {
      const obj = {};Object.entries(require("../utils/roleOptions")).map(x => obj[x[0]] = x[1].split(";")[0])
      return res.json(obj)
  })
  
  app.get("/channeloptions", (req, res) => {
      const obj = {};Object.entries(require("../utils/channelOptions")).map(x => obj[x[0]] = x[1].split(";")[0])
      return res.json(obj)
  })
  //DBD.JS is cool
  
  
    app.get("/embeds", (req, res) => {
    return res.json(embedFuncs)
  })
  
  app.get("/functions/:function", (req, res) => {

    if (maxRequests === requests) {
      res.status(429)
      return res.json({
        message: "Too many requests!"
      })
    }
    
    if (requests === 0) {
      setTimeout(() => {
        requests = 0
      }, 5000)
    }
    
    requests++
    
    if (req.params.function === "all") return res.json({
      functions: parser
    })
    
    const func = Object.entries(parser).find(key => key[0].replace("[", "") === req.params.function)
    
    if (func) {
      return res.json({
        name: func[0].replace("[", ""),
        description: func[1].split(";")[0],
        usage: func[1].split(";").slice(1).join(";")
      })
    } else {
      return res.json({
        message: "function not found"
      })
    }
  })
  


// listen for requests :)
const listener = app.listen(process.env.PORT || 1234, () => {
  console.log("Your app is listening on port " + listener.address().port);
});

}